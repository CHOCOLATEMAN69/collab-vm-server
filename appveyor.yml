image: Visual Studio 2019
platform: x64
skip_tags: true
environment:
  # Always save the cache because there isn't enough time
  # to build both the dependencies and the collab-vm-server
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  access_token:
    secure: /1wKmhBRo1sCNw9MG237fBihMhCJIMVajWI4BgTKQm39r7J6StfkJFg26TVkK/Qv
pull_requests:
  do_not_increment_build_number: true
install:
  # Clone submodules
  - git submodule update --init --recursive
  # Update vcpkg
  - git -C C:\Tools\vcpkg\ pull
  - C:\Tools\vcpkg\bootstrap-vcpkg.bat
  # Install dependencies
  - vcpkg.exe install --triplet %PLATFORM%-windows cairo libjpeg-turbo sqlite-modern-cpp libpng openssl pthreads
  # Upgrade dependencies if they were cached
  - vcpkg.exe upgrade --triplet %PLATFORM%-windows --no-dry-run
cache: 
  - C:\Tools\vcpkg\installed\
build_script:
  - mkdir build
  - cd build
  - cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%/install/ -DCMAKE_TOOLCHAIN_FILE=C:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%PLATFORM%-windows -DBOOST_ROOT=C:/Libraries/boost_1_69_0/ -DBoost_USE_STATIC_LIBS=ON -DBoost_USE_STATIC_RUNTIME=OFF ..
  - cmake --build . --target install --config RelWithDebInfo
  # Vcpkg should automatically copy any necessary DLLs,
  # but it doesn't so manually copy them
  - ps: cd "$env:APPVEYOR_BUILD_FOLDER/install/"; $missingDLLs = $true; while ($missingDLLs) { $missingDLLs = ls | %{ &'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.21.27702\bin\Hostx86\x86\dumpbin.exe' /dependents /nologo $_.Name } | sls '\S+\.dll' | %{ $_.matches[0].Value } | select -unique | ?{ -not (test-path $_) } | %{ ls C:\Tools\vcpkg\installed\x64-windows\debug\ -rec -incl $_ } | %{ cp $_; $_ } }
artifacts:
  - path: install/
    name: collab-vm-server
before_deploy:
    # Move the tag to the most recent commit, but delete it first
    # so GitHub updates the timestamp of the release
  - git tag --force prerelease HEAD
  - git config --global credential.helper store
  - ps: Add-Content "$HOME\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"
  - git push --delete origin prerelease
  - git push --force --tags origin prerelease
deploy:
  provider: GitHub
  tag: prerelease
  artifact: collab-vm-server
  prerelease: true
  draft: false
  force_update: true
  on:
    branch: master
  auth_token:
    secure: /1wKmhBRo1sCNw9MG237fBihMhCJIMVajWI4BgTKQm39r7J6StfkJFg26TVkK/Qv
